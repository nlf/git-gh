#!/usr/bin/env node
var github = require('../lib/github'),
    config = require('../lib/config'),
    repo = require('../lib/repo')[0],
    columnizer = require('columnizer'),
    colors = require('colors'),
    display = new columnizer(),
    bold = false,
    opts = require('nomnom').options({
        filter: {
            position: 0,
            help: 'what to filter on, defaults to "all"',
            choices: ['all', 'mine', 'unassigned', 'milestone']
        }
    }).parse();

var request = { user: repo.user, repo: repo.repo };
opts._ = opts._.slice(1).join(' ').toLowerCase();

if (opts.filter) {
    var param = opts.filter.toLowerCase();
    if (param === 'all') {
        makeRequest(request);
    } else if (param === 'mine') {
        request.assignee = config.user;
        makeRequest(request);
    } else if (param === 'unassigned') {
        request.assignee = 'none';
        makeRequest(request);
    } else if (param === 'milestone') {
        if (!isNaN(opts._)) {
            request.milestone = opts._;
            makeRequest(request);
        } else {
            var search = opts._;
            github.issues.getAllMilestones(request, function (err, msg) {
                if (err) {
                    console.error(err.message);
                    process.exit(1);
                }
                msg.forEach(function (milestone) {
                    if (milestone.title.toLowerCase() === search) {
                        request.milestone = milestone.number;
                    }
                });
                if (!request.milestone) {
                    console.error('Milestone ' + search + ' not found');
                    process.exit(1);
                }
                makeRequest(request);
            });
        }
    }
} else {
    makeRequest(request);
}

function makeRequest(request) {
    github.issues.repoIssues(request, function (err, msg) {
        if (err) {
            console.error(err.message);
            process.exit(1);
        }
        if (!msg.length) {
            console.log('No open issues');
            process.exit(0);
        }
        var issues = [];
        display.row('ID'.bold, 'Title'.bold, 'Assigned to'.bold, 'Milestone'.bold, 'Comments'.bold);
        display.row('-', '-', '-', '-', '-');
        msg.forEach(function (issue) {
            if (!issue.pull_request.html_url) {
                var assignee = issue.assignee ? issue.assignee.login : '';
                var milestone = issue.milestone ? issue.milestone.title : '';
                if (bold) {
                    issue.number = String(issue.number).bold;
                    issue.title = issue.title.bold;
                    assignee = assignee.bold;
                    milestone = milestone.bold;
                    issue.comments = String(issue.comments).bold;
                }
                display.row(issue.number, issue.title, assignee, milestone, issue.comments);
                bold = !bold;
            }
        });
        display.print();
    });
}
